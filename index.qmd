---
title: "Data Science for Public Policy"
subtitle: "Assignment 04: Data Visualization, Quarto, and Git"
author: "Juliette Taylor - jmt333, Thomas Tiberghien Alvarez - tt791"
format: 
  html:
    code-line-numbers: true
execute: 
  warning: false
urlcolor: blue
---

\vspace{0.1in}

```{r}
#| output: false
library(tidyverse)
library(knitr)
library(lubridate)
library(purrr)
library(stringr)
```


The code below is used to download the data zip files into csvs that are then ingested by R. Make sure that the period input is equivalent to the ones listed in https://s3.amazonaws.com/capitalbikeshare-data/index.html
```{r}
load_cabi_data <- function(period, zip_dir = "data/", csv_dir = "csvs/") {
        url <- str_glue("https://s3.amazonaws.com/capitalbikeshare-data/{period}-capitalbikeshare-tripdata.zip")
        download.file(url, destfile = str_glue(paste0(zip_dir,"{period}-cabi-tripdata.zip")))
        zip_files <- paste0(zip_dir, list.files(zip_dir))
        for (x in zip_files) {
                unzip(x, exdir = csv_dir)
        }
        csv_files <- paste0(csv_dir, list.files(csv_dir, pattern = ".csv"))
        output <- bind_rows(map(csv_files, read_csv)) %>% janitor::clean_names()
        unlink(paste0(zip_dir,"*"), recursive = TRUE)
        unlink(paste0(csv_dir,"*"), recursive = TRUE)
        return(output)
}
```

## Plot 1: Yearly changes

The goal of this plot is to simply see how ridership has changed throughout the last 10 years. The output graph is relatively simple, but in order to obtain the data, several data sources had to be wrangled together. 

```{r}
# make function that wraps around the load_cabi_data function. I want to get a total of all monthly rides since 2012, but the data past 2018 requires a different setup

# for 2018+
# first make list of periods to get data from for each year
# loop through these periods to get data, and then simply obtain the count for this
# Do a pause between each loop
# add all these counts to a final tibble
monthly_rides_2018 <- tibble(year = 2018, month = 1:12, counts = integer(12)) %>% 
        mutate(str_month = str_pad(month, 2, pad = "0")) %>% 
        mutate(period = paste0(year, str_month)) %>% 
        select(-str_month)

for (i in monthly_rides_2018$period) {
        data <- load_cabi_data(i)
        monthly_rides_2018 <- monthly_rides_2018 %>% 
                mutate(counts = if_else(period == i, nrow(data), counts))
}


# Function to count monthly rides for 2011-2017
by_month <- function(data, year) {
        output <- data %>% 
                janitor::clean_names() %>% 
                group_by(month = month(start_date)) %>% 
                summarise(monthly_count = n()) %>% 
                ungroup() %>% 
                mutate(year = year)
        return(output)
}
```



## Plot 2: Ridership throughout the day

```{r}

#data_sept_2022 <- load_cabi_data("202209") %>% janitor::clean_names()
minutes <- data_sept_2022 %>%
        group_by(hour = hour(started_at), minute = minute(started_at)) %>% 
        summarise(count = n()) %>% 
        ungroup() %>% 
        mutate(hour_minute = 60*hour+minute)

ggplot(data = minutes) +
        geom_col(mapping = aes(x = hour_minute, y = count), 
                 colour = "red") +
        coord_polar() + 
        labs(title = "Ridership throughout the day")

#axis label as hour vs minutes
```


